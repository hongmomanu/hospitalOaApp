;; Analyzed by ClojureScript 1.7.48
{:use-macros {obj purnam.core, ! purnam.core, def.controller gyr.core, def.factory gyr.core, def.service gyr.core, arr purnam.core, def.module gyr.core, def.n purnam.core, def.config gyr.core}, :excludes #{}, :name hospitaloaapp.controllers.main, :imports nil, :requires {repl clojure.browser.repl, clojure.browser.repl clojure.browser.repl, jayq.core jayq.core}, :uses {html jayq.core, css jayq.core, $ jayq.core}, :defs {serverurl {:name hospitaloaapp.controllers.main/serverurl, :file "src/hospitaloaapp/controllers/main.cljs", :line 19, :column 1, :end-line 19, :end-column 15, :meta {:file "/home/jack/soft/hospitalOaApp/www/src/hospitaloaapp/controllers/main.cljs", :line 19, :column 6, :end-line 19, :end-column 15}}, global-hub {:name hospitaloaapp.controllers.main/global-hub, :file "src/hospitaloaapp/controllers/main.cljs", :line 22, :column 1, :end-line 22, :end-column 16, :meta {:file "/home/jack/soft/hospitalOaApp/www/src/hospitaloaapp/controllers/main.cljs", :line 22, :column 6, :end-line 22, :end-column 16}}, starter_controllers {:name hospitaloaapp.controllers.main/starter_controllers, :meta {:file nil}, :file "src/hospitaloaapp/controllers/main.cljs", :line 28, :column 1}, starter_MapService {:name hospitaloaapp.controllers.main/starter_MapService, :meta {:file nil}, :file "src/hospitaloaapp/controllers/main.cljs", :line 31, :column 1}, starter_controllers_AppCtrl {:name hospitaloaapp.controllers.main/starter_controllers_AppCtrl, :meta {:file nil}, :file "src/hospitaloaapp/controllers/main.cljs", :line 43, :column 1}, starter_controllers_PlaylistsCtrl {:name hospitaloaapp.controllers.main/starter_controllers_PlaylistsCtrl, :meta {:file nil}, :file "src/hospitaloaapp/controllers/main.cljs", :line 75, :column 1}, starter_controllers_PlaylistCtrl {:name hospitaloaapp.controllers.main/starter_controllers_PlaylistCtrl, :meta {:file nil}, :file "src/hospitaloaapp/controllers/main.cljs", :line 89, :column 1}}, :require-macros {purnam.core purnam.core, gyr.core gyr.core}, :cljs.analyzer/constants {:seen #{:scope :title :markers :id}, :order [:markers :scope :title :id]}, :doc nil}